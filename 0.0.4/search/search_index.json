{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MVR Make Package","text":"<p>This tool automates the generation of a boilerplate folder structure and essential files based on user input, specifically designed for the MVR framework. It simplifies the process of setting up a new package with the required structure and configuration files, allowing developers to focus on implementing their core functionality.</p>"},{"location":"#overview","title":"Overview","text":"<p>The <code>mvr-make-package</code> tool is designed to:</p> <ul> <li>Generate a standardized folder structure for MVR packages.</li> <li>Populate each folder with boilerplate files.</li> <li>Automatically configure files with initial content based on user input.</li> </ul> <p>This tool ensures that all necessary components for an MVR package are in place, enabling seamless integration into the MVR framework.</p>"},{"location":"#installation","title":"Installation","text":"pip install mvr-make-packagetest"},{"location":"#usage","title":"Usage","text":"<p>To create a new MVR package, simply run <code>mvr-make-package</code></p> <p>You will be prompted to provide the following information:</p> <ul> <li>Package Name: The name of your MVR package (e.g., mvr-hello-world).</li> <li>Minimum NCS Version: The minimum supported version of the NCS framework (e.g., 5.0).</li> <li>Package Description: A brief description of the package (e.g., This package provides hello world functionality for MVR).</li> </ul> <p>The tool will use these inputs to generate the folder structure and populate the files with initial content based on your responses.</p>"},{"location":"#example","title":"Example","text":"<pre><code>$  mvr-make-package\n\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Welcome \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502                           mvr-make-package - 0.0.x                           \u2502\n\u2502                                                                              \u2502\n\u2502 This tool generates a folder structure with boilerplate files based on user  \u2502\n\u2502                input. This will be used by the MVR framework                 \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Generating packages... \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n\n  [1/3] name of the mvr package (mvr package name): mvr-hello-world\n  [2/3] mininum ncs version (5.0): \n  [3/3] mvr package description (package description): mvr hello world example\n\ud83c\udf89 Package generated successfully! \ud83c\udf89\n</code></pre> <p>After running this command, a new folder called <code>mvr-hello-world</code> will be created with the standard folder structure.</p>"},{"location":"#generated-folder-structure","title":"Generated Folder Structure","text":"<pre><code>mvr-hello-world\n\u251c\u2500\u2500 package-meta-data.xml\n\u251c\u2500\u2500 python\n\u2502   \u2514\u2500\u2500 mvr_hello_world\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 correlators\n\u2502       \u2502   \u251c\u2500\u2500 __init__.py\n\u2502       \u2502   \u2514\u2500\u2500 c_1.py\n\u2502       \u251c\u2500\u2500 extractions\n\u2502       \u2502   \u251c\u2500\u2500 __init__.py\n\u2502       \u2502   \u251c\u2500\u2500 dx_1.py\n\u2502       \u2502   \u2514\u2500\u2500 dx_2.py\n\u2502       \u251c\u2500\u2500 mvr_hello_world.py\n\u2502       \u251c\u2500\u2500 template_engines.py\n\u2502       \u2514\u2500\u2500 yang_inputs.py\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 Makefile\n\u2502   \u2514\u2500\u2500 yang\n\u2502       \u2514\u2500\u2500 mvr-hello-world.yang\n\u2514\u2500\u2500 templates\n    \u2514\u2500\u2500 mvr-hello-world-template.xml\n</code></pre>"},{"location":"#testing","title":"Testing","text":"<p>This project includes automated tests to verify the integrity of the generated package. The tests check that:</p> <ul> <li>All expected files are generated.</li> <li>The contents of each file match the predefined templates (using file hash comparison).</li> </ul>"},{"location":"#running-tests","title":"Running Tests","text":"<p>To run the tests, use <code>pytest</code>. Install using <code>pip install pytest</code> if not already installed.</p> cd testspytest============================= test session starts ==============================platform darwin -- Python 3.9.10, pytest-8.3.3, pluggy-1.5.0rootdir: mvr-make-packageconfigfile: pyproject.tomlplugins: cov-6.0.0, anyio-4.6.2.post1collected 13 items                                                             test_mvr_make_package.py .............                                   [100%]============================== 13 passed in 0.20s =============================="},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! If you\u2019d like to improve the tool or add new features, please:</p> <ul> <li>Fork the repository.</li> <li>Create a new branch for your feature or bugfix.</li> <li>Submit a pull request.</li> </ul> <p>Please make sure to add tests for any new features and update the README if necessary.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License. See the LICENSE file for details.</p>"}]}